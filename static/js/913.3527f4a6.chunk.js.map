{"version":3,"file":"static/js/913.3527f4a6.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","components/AboutMovie/AboutMovie.jsx","components/Reviews/Reviews.jsx","pages/MovieReviews.jsx","components/Cast/Cast.jsx","pages/MovieCast.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=2d3d1caa19c1ed6e7fe5b5dcf5521dd3`\n  );\n\n  return data;\n};\n\nexport const getSingleMovie = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=2d3d1caa19c1ed6e7fe5b5dcf5521dd3`\n  );\n\n  return data;\n};\n\nexport const getMoviesBySearch = async search => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=2d3d1caa19c1ed6e7fe5b5dcf5521dd3&query=${search}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=2d3d1caa19c1ed6e7fe5b5dcf5521dd3`\n  );\n\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=2d3d1caa19c1ed6e7fe5b5dcf5521dd3`\n  );\n\n  return data;\n};\n\n\n\n\n\n","import css from 'components/Styles.module.css'\nexport const AboutMovie = ({ movies }) => {\n  const { poster_path, original_title, vote_average, overview, genres } = movies;\n \n  const User_Score = Math.round(vote_average * 10);\n\n  const Genres = genres?genres.map(genre => genre.name).join(' ') : 'Genres is not available';\n\n  return (\n    <div className= {css.AboutMovie}>\n      <div>\n        {poster_path && (\n          <img\n            className={css.Poster}\n            src={`https://image.tmdb.org/t/p/w300/${poster_path} `}\n            alt=\"\"\n          />\n        )}\n      </div>\n      <div>\n        <h3>{original_title}</h3>\n        <p>User Score: {User_Score} %</p>\n        <h4>Overview</h4>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        <p>{Genres}</p>\n      </div>\n    </div>\n  );\n};\n\n\n","export const Reviews = ( reviews ) => {\n  const items = reviews.reviews.map(({ id, content, author_details }) => (\n    <li key={id}>\n      <h3>Author: {author_details.username}</h3>\n      <p>{content}</p>\n    </li>\n  ));\n  return <ul >{items}</ul>;\n};","import { useState, useEffect } from 'react';\nimport { getReviews } from 'components/Api/Api';\nimport { useParams } from 'react-router-dom';\nimport  Loader  from 'components/Loader/Loader';\nimport { Notify } from \"notiflix\";\nimport { Reviews } from 'components/Reviews/Reviews';\n\nconst MovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getMovieReviews() {\n      try {\n        setIsLoading(true);\n        const data = await getReviews(id);\n        if (data.results.length === 0)\n          Notify.info(\n            'While there are no reviews, you have the opportunity to be the first'\n          );\n        setReviews(data.results);\n      } catch (error) {\n         setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovieReviews();\n  }, [id]);\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {reviews && <Reviews reviews={reviews} />}\n          {error && <p> Movies load failed</p>}\n          </div>\n  );\n};\n\nexport default MovieReviews;","import css from 'components/Styles.module.css'\nexport const Casts = (casts) => {\n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n    const items = casts.casts.map(\n        ({ original_name, id, profile_path, character }) => (\n            <li key={id}>\n                <img className = {css.CastPhoto} src={profile_path ? `https://image.tmdb.org/t/p/w300/${profile_path}` : defaultImg} alt=\"poster\" />\n                <p>{original_name}</p>\n                <p>Character:{character}</p>\n            </li>));\n     return <ul >{items}</ul>;\n     }\n \n\n\n\n","import { useState, useEffect } from 'react';\nimport { getCast } from 'components/Api/Api';\nimport { useParams } from 'react-router-dom';\nimport  Loader  from 'components/Loader/Loader';\nimport { Casts } from 'components/Cast/Cast';\n\nconst MovieCast = () => {\n  const [casts, setCasts] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getCasts() {\n      try {\n        setIsLoading(true);\n\n        const  data  = await getCast(id);\n        setCasts(data.cast);\n      } catch (error) {\n         setError(error.message);\n      } finally {\n       setIsLoading(false);\n      }\n    }\n\n    getCasts();\n  }, [id]);\n  return (\n    <>\n      {isLoading && <Loader />}\n\n        {casts && <Casts casts={casts} />}\n          {error && <p> Movies load failed</p>}\n    </>\n  );\n};\nexport default MovieCast;","import { useEffect, useState, useRef } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { NavLink, Link, useParams, useLocation } from 'react-router-dom';\nimport { AboutMovie } from '../components/AboutMovie/AboutMovie';\nimport { getSingleMovie } from '../components/Api/Api';\nimport MovieReviews from './MovieReviews';\nimport MovieCast from './MovieCast';\nimport Loader from 'components/Loader/Loader';\nimport { Suspense } from 'react';\nimport css from 'components/Styles.module.css'\n\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState();\n\n    const { id } = useParams();\n\n\n    const location = useLocation();\n    const backLinkRef = useRef(location.state?.from ?? '/');\n\n    useEffect(() => {\n    const fetchMoviesById = async () => {\n    \n        try {\n          setIsLoading(true);\n            const data = await getSingleMovie(id);\n            setMovie(data);\n              }  catch (error) {\n         setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMoviesById();\n  }, [id]);\n  return (\n    <>\n      <div>\n                     <Link to={backLinkRef.current}> <button>Go back</button></Link>\n              {isLoading && <p> Movie load....</p>}\n              \n              {error && <p> Movie load failed</p>}\n              \n              {!isLoading && <AboutMovie movies={movie}/>}\n          </div>\n      <div className={css.AddInfo}>\n        <h4>Additional information</h4>\n        \n              <ul>\n                  <li>\n                      <NavLink className=\"header-link\" to=\"cast\">\n          Cast\n                  </NavLink>\n                  </li>\n                  <li>\n                       <NavLink className=\"header-link\" to=\"reviews\">\n          Reviews\n                  </NavLink>\n                  </li>\n              </ul>\n              <div>\n       \n      </div>\n      <Suspense fallback={<Loader />}>\n        <Routes>\n                      <Route path=\"cast\" element={<MovieCast />} />\n                       <Route path=\"reviews\" element={<MovieReviews />} />\n        </Routes>\n      </Suspense>\n    </div>\n      \n      </>\n      \n  );\n};\n\nexport default MovieDetails;"],"names":["getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","sent","abrupt","stop","apply","arguments","getSingleMovie","_ref2","_callee2","id","_yield$axios$get2","_context2","concat","_x","getMoviesBySearch","_ref3","_callee3","search","_yield$axios$get3","_context3","_x2","getCast","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","AboutMovie","movies","poster_path","original_title","vote_average","overview","genres","User_Score","Math","round","Genres","map","genre","name","join","_jsxs","className","css","children","_jsx","src","alt","Reviews","reviews","items","content","author_details","username","_useState","useState","_useState2","_slicedToArray","setReviews","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useParams","useEffect","_getMovieReviews","results","length","Notify","t0","message","finish","getMovieReviews","Loader","Casts","casts","original_name","profile_path","character","setCasts","_getCasts","cast","getCasts","_Fragment","_location$state$from","_location$state","movie","setMovie","location","useLocation","backLinkRef","useRef","state","from","fetchMoviesById","Link","to","current","NavLink","Suspense","fallback","Routes","Route","path","element","MovieCast","MovieReviews"],"sourceRoot":""}